// <auto-generated> This file has been auto generated by CSharp.OpenSource.LinqToKql.ORMGen.ORMGenerator. </auto-generated>
#pragma warning disable IDE1006 // Naming Styles
#nullable enable
using CSharp.OpenSource.LinqToKql.ORMGen;
using CSharp.OpenSource.LinqToKql.Provider;
using CSharp.OpenSource.LinqToKql.Extensions;

namespace AutoGenE2E;

public partial class AutoGenORMKustoDbContextE2E : ORMKustoDbContext
{
    public AutoGenORMKustoDbContextE2E(IKustoDbContextExecutor<AutoGenORMKustoDbContextE2E> executor) : base(executor)
    {
    }

    public virtual IQueryable<T> TestDatabase1<T>(string kql = "")
        => CreateQuery<T>($"{kql}", GetDatabaseName("TestDatabase1"));

    public virtual IQueryable<TestTable> TestTable
        => CreateQuery<TestTable>($"TestTable", GetDatabaseName("TestDatabase1"));

    public virtual IQueryable<SampleTable> SampleTable
        => CreateQuery<SampleTable>($"SampleTable", GetDatabaseName("TestDatabase1"));

    public virtual IQueryable<func1> func1()
        => CreateQuery<func1>($"func1()", GetDatabaseName("TestDatabase1"));

    public virtual IQueryable<T> db2<T>(string kql = "")
        => CreateQuery<T>($"{kql}", GetDatabaseName("TestDatabase2"));

    public virtual IQueryable<TestTable1> TestTable1
        => CreateQuery<TestTable1>($"TestTable1", GetDatabaseName("TestDatabase2"));

    public virtual IQueryable<func2> func2(string name, string lastName)
        => CreateQuery<func2>($"func2({name.GetKQLValue()}, {lastName.GetKQLValue()})", GetDatabaseName("TestDatabase2"));
}